const CACHE_NAME="alter-ego-ai-cache-v1",urlsToCache=["/","/index.html","/bundle.js","/manifest.json"];self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((e=>{console.log("Service worker cache opened");const t=urlsToCache.map((t=>fetch(t).then((n=>{if(!n.ok)throw new Error(`Failed to fetch ${t}`);return e.put(t,n)})).catch((e=>(console.warn(`Caching failed for ${t}:`,e),Promise.resolve())))));return Promise.all(t)}))),self.skipWaiting()})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return console.log("Deleting old cache:",e),caches.delete(e)}))))).then((()=>(console.log("Service worker activated"),self.clients.claim()))))})),self.addEventListener("fetch",(e=>{e.request.url.includes("/api/")?e.respondWith(fetch(e.request).catch((()=>caches.match(e.request)))):e.respondWith(caches.match(e.request).then((t=>{if(t)return t;const n=e.request.clone();return fetch(n).then((t=>{if(!t||200!==t.status||"basic"!==t.type)return t;const n=t.clone();return caches.open(CACHE_NAME).then((t=>{t.put(e.request,n)})).catch((e=>{console.warn("Failed to cache:",e)})),t}))})).catch((()=>{if(e.request.url.match(/\.(png|jpg|jpeg|gif|svg)$/))return new Response('<svg width="200" height="200" xmlns="http://www.w3.org/2000/svg"><text x="25" y="100" fill="#0f0">Offline Image</text></svg>',{headers:{"Content-Type":"image/svg+xml"}})})))}));