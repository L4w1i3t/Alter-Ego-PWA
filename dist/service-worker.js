const CACHE_VERSION="1.0.0",CACHE_NAME="app-cache-1.0.0",ASSETS_TO_CACHE=["/","/index.html","/bundle.js","/manifest.json","/assets/favicon.ico"];self.addEventListener("install",(e=>{console.log("Service Worker installing"),e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log("Caching static assets"),e.addAll(ASSETS_TO_CACHE)))).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(e=>{console.log("Service Worker activated"),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return console.log("Removing old cache:",e),caches.delete(e)}))))).then((()=>self.clients.claim())).then((()=>{if("localhost"!==self.location.hostname&&"127.0.0.1"!==self.location.hostname)return clients.matchAll().then((e=>{e.forEach((e=>{e.postMessage({type:"NEW_VERSION",version:"1.0.0",manual:!0})}))}))})))})),self.addEventListener("fetch",(e=>{e.request.url.includes("webpack-dev-server")||e.request.url.includes("hot-update")||e.request.url.includes("sockjs-node")||e.respondWith(fetch(e.request).then((t=>{if(!t||200!==t.status||"GET"!==e.request.method)return t;const s=t.clone();return caches.open(CACHE_NAME).then((t=>{t.put(e.request,s)})),t})).catch((()=>caches.match(e.request).then((t=>t||(e.request.headers.get("accept").includes("text/html")?caches.match("/"):void 0))))))})),self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}));