const CACHE_VERSION=1,CACHE_NAME="alter-ego-cache-v1",STATIC_ASSETS=["/","/index.html","/static/js/main.bundle.js","/static/css/main.css","/manifest.json","/favicon.ico"];async function syncMessages(){try{const e="alterEgoStorage",t=1,s=(await new Promise(((s,n)=>{const a=indexedDB.open(e,t);a.onerror=n,a.onsuccess=e=>s(e.target.result)}))).transaction(["pendingMessages"],"readwrite").objectStore("pendingMessages"),n=await new Promise(((e,t)=>{const n=s.getAll();n.onerror=t,n.onsuccess=t=>e(t.target.result)}));for(const e of n)try{(await fetch(e.url,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e.data)})).ok&&s.delete(e.id)}catch(e){console.error("Failed to sync message:",e)}}catch(e){console.error("Error during sync:",e)}}self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log("Caching static assets"),e.addAll(STATIC_ASSETS)))).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.filter((e=>e!==CACHE_NAME)).map((e=>caches.delete(e)))))).then((()=>(console.log("Service Worker activated"),self.clients.claim()))))})),self.addEventListener("fetch",(e=>{e.request.url.startsWith(self.location.origin)&&(e.request.url.includes("/api/")?e.respondWith(fetch(e.request).catch((()=>new Response(JSON.stringify({error:"You're offline. Please check your connection.",isOffline:!0}),{headers:{"Content-Type":"application/json"},status:503})))):e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).then((t=>{if(!t||200!==t.status||"basic"!==t.type)return t;const s=t.clone();return caches.open(CACHE_NAME).then((t=>{t.put(e.request,s)})),t})).catch((()=>"navigate"===e.request.mode?caches.match("/"):new Response("Network error occurred",{status:503,headers:{"Content-Type":"text/plain"}})))))))})),self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),self.addEventListener("sync",(e=>{"sync-messages"===e.tag&&e.waitUntil(syncMessages())}));