!function(){if(console.log("[Debug Tool] Initializing..."),console.log("[Debug Tool] Environment:",{userAgent:navigator.userAgent,host:window.location.host,pathname:window.location.pathname,protocol:window.location.protocol,isGitHubPages:window.location.hostname.includes("github.io")||window.location.pathname.includes("/Alter-Ego-PWA/")}),window.addEventListener("error",(function(e){console.error("[Debug Tool] Script load error:",e.target.src||e.target.href,e)}),!0),"fetch"in window){const e=window.fetch;window.fetch=function(o,t){return console.log("[Debug Tool] Fetch request:",o,t),e.apply(this,arguments).then((e=>(e.ok||console.warn("[Debug Tool] Fetch response not OK:",e.status,e.statusText,o),e))).catch((e=>{throw console.error("[Debug Tool] Fetch error:",e,o),e}))}}window.addEventListener("load",(()=>{console.log("[Debug Tool] Page loaded"),(()=>{const e=Date.now(),o=(()=>{try{const e=localStorage.getItem("refresh_timestamps");return e?JSON.parse(e):[]}catch(e){return console.error("[Debug Tool] Error reading refresh timestamps:",e),[]}})();o.push(e);const t=o.filter((o=>e-o<1e4));if((e=>{try{localStorage.setItem("refresh_timestamps",JSON.stringify(e))}catch(e){console.error("[Debug Tool] Error saving refresh timestamps:",e)}})(t),t.length>=5){console.error("[Debug Tool] REFRESH LOOP DETECTED!",t.length,"refreshes in",10,"seconds"),localStorage.removeItem("refresh_timestamps");const e=document.createElement("div");return e.style.position="fixed",e.style.top="0",e.style.left="0",e.style.right="0",e.style.bottom="0",e.style.backgroundColor="rgba(0,0,0,0.9)",e.style.color="#fff",e.style.padding="20px",e.style.zIndex="999999",e.style.fontFamily="monospace",e.style.fontSize="14px",e.style.overflow="auto",e.innerHTML=`\n          <h1 style="color: #f33; text-align: center;">Refresh Loop Detected</h1>\n          <p>The page has refreshed ${t.length} times in the last 10 seconds.</p>\n          <h2>Technical Information:</h2>\n          <ul>\n            <li>URL: ${window.location.href}</li>\n            <li>User Agent: ${navigator.userAgent}</li>\n            <li>Time: ${(new Date).toISOString()}</li>\n          </ul>\n          <h2>Diagnostic Steps:</h2>\n          <ol>\n            <li>Unregister service workers</li>\n            <li>Clear browser cache and cookies</li>\n            <li>Check for automatic redirects in HTML or JS</li>\n            <li>Examine network requests for redirect chains</li>\n          </ol>\n          <div style="text-align: center; margin-top: 20px;">\n            <button id="sw-unregister" style="background: #900; color: white; border: none; padding: 10px 15px; margin-right: 10px; cursor: pointer;">\n              Unregister Service Workers\n            </button>\n            <button id="clear-site-data" style="background: #333; color: white; border: none; padding: 10px 15px; cursor: pointer;">\n              Clear Site Data\n            </button>\n          </div>\n          <pre style="background: #111; padding: 10px; margin-top: 20px; max-height: 200px; overflow: auto;">\n  Location: ${JSON.stringify(window.location,null,2)}\n  Refresh Timestamps: ${JSON.stringify(t,null,2)}\n          </pre>\n        `,document.body.appendChild(e),setTimeout((()=>{document.getElementById("sw-unregister").addEventListener("click",(()=>{navigator.serviceWorker&&navigator.serviceWorker.getRegistrations().then((e=>{e.forEach((e=>e.unregister())),alert(`Unregistered ${e.length} service worker(s). Reload the page.`)}))})),document.getElementById("clear-site-data").addEventListener("click",(()=>{localStorage.clear(),sessionStorage.clear(),window.caches&&caches.keys().then((e=>{e.forEach((e=>caches.delete(e)))})),alert("Site data cleared. Reload the page.")}))}),100),navigator.serviceWorker&&navigator.serviceWorker.controller&&navigator.serviceWorker.getRegistrations().then((e=>{e.forEach((e=>{console.log("[Debug Tool] Unregistering service worker to break refresh loop"),e.unregister()}))})),!0}return!1})()||console.log("[Debug Tool] No refresh loop detected"),setTimeout((()=>{const e=document.querySelectorAll("script");let o=!1;e.forEach((e=>{e.src&&e.src.includes("bundle.js")&&(o=!0,console.log("[Debug Tool] Bundle script found:",e.src))})),o||console.error("[Debug Tool] Bundle script not found!"),document.querySelector("#root")?(console.log("[Debug Tool] Root element found"),0===document.querySelector("#root").children.length&&console.warn("[Debug Tool] Root element is empty, React may not have rendered")):console.error("[Debug Tool] Root element not found!")}),1e3)}))}();